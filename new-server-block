#Custom boilerplate that is copied when makelink.sh is run. "currentproject" is replaced when the script is run.
#Should live in /etc/nginx/sites-available/ on a stock Ubuntu / Debian installation
#TODO: Make find and replace for domain within makelink.sh

server {
        listen 80;
        listen [::]:80;

        root /var/www/html/currentproject/frontend;
        index index.html index.htm index.nginx-debian.html;

        server_name frontend.currentproject.example.com;

        location / {
                try_files $uri $uri/ =404;
				autoindex on;
        }
}

server {
    listen 80;
	listen [::]:80;
	
    server_name dev.currentproject.example.com;
    root /var/www/html/currentproject/dev;
    
    index index.php index.html index.htm;
 
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
		autoindex off;
    }
    
	location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.2-fpm.sock;
	}
	
    charset utf-8;
	
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~ /\. {
		deny all;
	}

	# Deny access to any files with a .php extension in the uploads directory for the single site
	location ~ ^/wp-content/uploads/.*\.php$ {
		deny all;
	}


	# Deny access to any files with a .php extension in the uploads directory
	# Works in sub-directory installs and also in multisite network
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~* /(?:uploads|files)/.*\.php$ {
		deny all;
	}

}